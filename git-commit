#Attention, pour lancer cette commande il faudra : 

#Copier ce fichier à la racine du projet react
#Créer un dossier ScriptRyanDECIAN dans le répertoire logiciel de Git/usr/bin/
#Lancer les commandes suivantes dans le terminal git :
# mv git-commit /usr/bin/ScriptRyanDECIAN/git-commit
# chmod +x /usr/bin/ScriptRyanDECIAN/git-commit
# nano ~/.bashrc
#Copier coller cette ligne dans ~/.bashrc :
# export PATH=$PATH:/usr/local/bin/ScriptRyanDECIAN
#Lance la commande suivante : 
# source ~/.bashrc
#Exécution de cette commande avec :
# git-commit

#!/bin/bash

# Affiche l'état actuel du dépôt
git status

# Demande le message de commit
read -p "Entrez votre message de commit : " msg

# Récupère les fichiers modifiés, nouveaux et supprimés
files=$(git ls-files --modified --deleted --others --exclude-standard)

# Vérifie s'il y a des fichiers à ajouter
if [ -z "$files" ]; then
  echo "❌ Aucun fichier modifié, supprimé ou nouveau fichier à ajouter. Commit annulé."
  exit 1
fi

# Ajoute les fichiers modifiés, nouveaux et supprimés
git add -A

# Crée un fichier temporaire pour le message de commit
echo "$msg" > .gitmessage.txt

# Effectue le commit
git commit -F .gitmessage.txt

# Supprime le fichier temporaire
rm .gitmessage.txt

# Récupère le nom de la branche actuelle
branch=$(git rev-parse --abbrev-ref HEAD)

# Pousse sur la branche courante
git push origin "$branch" || { echo "❌ Erreur : Push échoué."; exit 1; }
echo "✅ Commit réussi, envoi sur la branche '$branch'..."
